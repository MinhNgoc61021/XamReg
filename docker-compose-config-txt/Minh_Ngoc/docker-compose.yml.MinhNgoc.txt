# MySQL version
version: '3'
# cmd: docker-compose build & docker-compose up (build & run docker)
services:
  db:
    image: mysql
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    restart: always
    environment:
      - MYSQL_USER=newroot
      - MYSQL_PASSWORD=528491
      - MYSQL_ROOT_PASSWORD=528491
      - MYSQL_DATABASE=xamreg

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    depends_on:
      - db
    environment:
      - PMA_HOST=db
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - 8070:80

  api:
    image: xamreg/api
    build: api # setting build to ./api because Dockerfile is inside the api folder.
    container_name: api
    environment:
      - QUIZ_ENV=production
    volumes:
      - ./:/run
    restart: always

# Postgres version
version: '3'
# cmd: docker-compose build & docker-compose up (build & run docker)
services:
  pgAdmin:
    image: dpage/pgadmin4
    container_name: "pgAdmin_container"
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@admin.com
      PGADMIN_DEFAULT_PASSWORD: 528491
    restart: always
    volumes:
      - pgadmin:/var/lib/pgadmin

  postgres:
    image: postgres:11.6-alpine
    container_name: "postgresDB_container"
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data

  api:
    image: xamreg/api
    container_name: "flask_api_container"
    build: api # setting build to ./api because Dockerfile is inside the api folder.
    environment:
      - QUIZ_ENV=production
    depends_on:
      - postgres
    restart: always
    volumes:
      - ./:/run

  client:
    image: xamreg/client
    container_name: "vue_client_container"
    build: client
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always

volumes:
  pgadmin:
  postgres:
