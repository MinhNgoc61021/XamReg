version: '3'
# cmd: docker-compose build & docker-compose up (build & run docker)
services:
  db:
    image: mysql:5.7
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    restart: always
    environment:
      - MYSQL_USER=newroot
      - MYSQL_PASSWORD=528491
      - MYSQL_ROOT_PASSWORD=528491
      - MYSQL_DATABASE=xamreg
    ports:
      - "3307:3307"
  api:
    command: python run.py
    environment:
      - QUIZ_ENV=development
    ports:
      - "5000:5000"
    depends_on:
      - db

  client:
    image: xamreg/client
    build: client
    container_name: client
    command: npm run dev
    ports:
      - "8080:8080"
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always


version: '3'
# cmd: docker-compose build & docker-compose up (build & run docker)
services:
  pgAdmin:
    restart: always
    image: dpage/pgadmin4
    container_name: "vue_client_container"
    ports:
      - "8070:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@admin.com
      PGADMIN_DEFAULT_PASSWORD: 528491
    volumes:
      - pgadmin:/var/lib/pgadmin

  postgres:
    image: postgres:11.6-alpine
    container_name: "postgresDB_container"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=528491
      - POSTGRES_DB=xamreg
    ports:
      - "5432:5432"
    volumes:
      - pgvol:/var/lib/postgresql/data

  api:
    container_name: "flask_api_container"
    command: python run.py
    environment:
      - QUIZ_ENV=development
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    restart: always

  client:
    image: xamreg/client
    container_name: "vue_client_container"
    build: client
    command: npm run dev
    ports:
      - "8080:8080"
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always
volumes:
  pgadmin: